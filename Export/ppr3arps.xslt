<xsl:stylesheet version = '2.0'
	xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
>
<!-- 
 	(с)Магма-Компьютер, Омск, 2010.
	Данный xslt-файл преобразования xml проекта из Стройплощадка 3.0 в формат АРПС
	описание формата см
	
	http://www.smeta.ru/static/31_868.html




	Преобразует вложенную структуру работ проекта в перечень позиций для локальной сметы.
	Из стройплощадки транслируются перечень разделов, работ и заголовков с единицами измерения и количеством,
	а также назначенная на работу техника и ее количество на единицу измерения работы, персонал и материалы
	в соответствии с текущей расценкой на работу
	
	Работы проекта со стилем Раздел - становятся разделами сметы.
	Работы проекта со стилем Заголовок становятся заголовками. (заголовки в гранд-смете не включают работы 
	(как в стройплощадке), поэтому при преобразовании этим файлом они будут попадать в том же уровне, что и перечень работ, которые в них входит.
	
	Что делает преобразование:
	Пробегает по оси project\prjType\JobsTable
	Выбирает все узлы в которых prop@name='Job'
	Преобразует узлы в те имена, которые читает гранд-смета
	По ID текущей расценки (prjActiveRateID) находит Технику (по типу \\node\prop[@name=node-type]='Technics'
	Персонал ,
	Материалы ,
	и включает их в список ресурсов на текущую работу.
-->
<xsl:output method="text" encoding="cp866" indent="no"/>

<xsl:template match = "root">
	<!-- Ищем в корне project-->
	<xsl:apply-templates select="project"/>
</xsl:template>
<xsl:template match = "project">
	<xsl:text>1#</xsl:text><!-- 5.2. Тип 1 – идентификация стандарта.-->
	<xsl:text>АРПС 1.10#</xsl:text><!-- 1) Наименование и версия стандарта (текст). Для данной версии стандарта это поле должно содержать "АРПС 1.10" (все буквы русского алфавита) (АРПС - Ассоциация Разработчиков Программного обеспечения для Строительства).-->
	<xsl:text>СПДС Стройплощадка#</xsl:text><!-- 2) Наименование программы, создавшей файл (текст). Значение определяется разработчиками программ.-->
	<xsl:text>3.0</xsl:text><!-- 3) Номер версии программы, создавшей файл (текст). Значение определяется разработчиками программ.-->
	<xsl:text>&#13;&#10;</xsl:text>

	<xsl:text>3#</xsl:text><!--5.3. Тип 3 – идентификация документа.-->
	<xsl:text>#</xsl:text><!--1) Номер договора (объекта) (текст)   -->
	<xsl:text>Объект#</xsl:text><!--2) Наименование договора (объекта) (текст).-->
	<xsl:text>#</xsl:text><!--3) Адрес объекта (текст).-->
	<xsl:text>Смета#</xsl:text><!--4) Номер документа или наименование передаваемой сметы (текст).-->
	<xsl:text>Смета#</xsl:text><!--5) Наименование документа (текст).-->
	<xsl:text>#</xsl:text><!--6) Наименование организации-заказчика (текст).-->
	<xsl:text>#</xsl:text><!--7) ФИО представителя организации-заказчика (текст).-->
	<xsl:text>#</xsl:text><!--8) Наименование организации-подрядчика (текст).-->
	<xsl:text>#</xsl:text><!--9) ФИО представителя организации-подрядчика (текст).-->
	<xsl:text>#</xsl:text><!--10) Наименование организации-субподрядчика (текст).-->
	<xsl:text>#</xsl:text><!--11) ФИО представителя организации-субподрядчика (текст). -->
	<xsl:text>#</xsl:text><!--12) ФИО составителя документа (текст).-->
	<xsl:text>#</xsl:text><!--13) ФИО контролера документа (текст).-->
	<xsl:text>0#</xsl:text><!--14) Общая стоимость по смете, акту выполненных работ (число).-->
	<xsl:text>2001#</xsl:text><!--15) В каких ценах составлен документ (число). Поле может содержать информацию об уровне цен, в которых составлен документ, например, 1984, 1991, 1998 – цены 1984, 1991, 1998 годов. Для документов, составленных в текущих ценах, поле не заполняется.-->
	<xsl:text>0#</xsl:text><!--16) Период, за который составлен документ (число). Для смет поле содержит 0, для актов выполненных работ – год и месяц выполнения в формат ГГГГММ, где ГГГГ – номер года, ММ – номер месяца.-->
	<xsl:text>#</xsl:text><!--17) Код стройки (текст).-->
	<xsl:text>#</xsl:text><!--18) Наименование стройки (текст).-->
	<xsl:text>#</xsl:text><!--19) Основание для разработки передаваемого документа (текст) – ссылка на проектную документацию и т.п.-->
	<xsl:text></xsl:text><!--20) Обозначение нормативной базы, на основании которой составлен документ (текст). Форма обозначения определяется программой, создающей блок.-->
	<xsl:text>&#13;&#10;</xsl:text>

	<xsl:apply-templates select="node">
	<!--Здесь и далее применение шаблонов сортируется по оси Position, т.к. в исходной xml-ке они
			    могут идти как попало-->
		<xsl:sort select="current()/prop[@name='Position']" data-type="number" order="ascending"/>
	</xsl:apply-templates>
</xsl:template>

<xsl:template match = "node">
	<!-- Преобразуем дочерние узлы выбранного узла в текущие переменные:-->
	<xsl:variable name="job-node-type" select="prop[@name='node-type']"/>       <!-- Тип узла-->	
	<xsl:variable name="job-style"     select="prop[@name='Style']"/>	    <!-- Стиль работы-->	
	<xsl:variable name="job-number"    select="prop[@name='Path']"/>	    <!-- Путь (номер) работы-->	
	<xsl:variable name="job-unit"      select="prop[@name='Unit']"/>	    <!-- Ед.изм. работы-->	
	<xsl:variable name="job-volume"    select="prop[@name='Volume']"/>	    <!-- Объем работы-->	
	<xsl:variable name="job-contents"  select="prop[@name='Contents']"/>        <!-- Состав работы-->	
	<xsl:variable name="job-rate-id"   select="prop[@name='prjActiveRateID']"/> <!-- ID Текущей расценки на работе-->
	
	<!-- Первый уровень вложенности: тип узла == prjType-->
	<xsl:if test="$job-node-type='prjType'">
		<xsl:apply-templates select="node"/>
	</xsl:if>
	<!-- Второй уровень вложенности: тип узла == JobsTable-->
	<xsl:if test="$job-node-type='JobsTable'">
		<!-- В первом уровне GrandSmeta разрешены только Chapter-->
		<xsl:apply-templates select="node[./prop[@name='Style']=0]">
			<xsl:sort select="current()/prop[@name='Position']" data-type="number" order="ascending"/>
		</xsl:apply-templates>
	</xsl:if>

	<!-- Последующие уровни вложенности: тип узла == Job-->
	<xsl:if test="$job-node-type='Job'">
		<!-- Стиль работы == "Раздел" -->	
		<xsl:if test="$job-style=0">
			<xsl:text>10#</xsl:text><!-- 5.4. Тип 10 – Заголовок раздела документа.-->
			<xsl:value-of select="count(ancestor::*)-4"/><xsl:text>#</xsl:text><!--1) Уровень заголовка (целое неотрицательное число). Уровень 0 соответствует наиболее крупным разделам документа. Количество уровней не ограничивается, но при загрузке информации каждая программа может объединять уровни, уменьшая глубину их вложения. При таком объединении названия уровней объединяются, то есть к названию более высокого уровня дописывается справа название входящего в него подуровня. --> <!--    Пример вычисления глубины вложенности: http://bytes.com/topic/net/answers/572365-how-compute-nodes-depth-xslt-->
			<xsl:value-of select="./prop[@name='Position']"/><xsl:text>#</xsl:text><!--2) Номер данного раздела (целое неотрицательное число). На нумерацию разделов не накладывается никаких дополнительных требований, например некоторых номеров может и не быть.-->
			<xsl:value-of select="@Name"/><!--3) Наименование раздела (текст).-->
			<xsl:text>&#13;&#10;</xsl:text>

			<xsl:apply-templates select="node">
				<xsl:sort select="current()/prop[@name='Position']" data-type="number" order="ascending"/>
			</xsl:apply-templates>
		</xsl:if>
                <!-- Стиль работы == "Заголовок" -->	
		<xsl:if test="$job-style=1">
			<xsl:text>10#</xsl:text><!-- 5.4. Тип 10 – Заголовок раздела документа.-->
			<xsl:value-of select="count(ancestor::*)-4"/><xsl:text>#</xsl:text><!--1) Уровень заголовка (целое неотрицательное число). Уровень 0 соответствует наиболее крупным разделам документа. Количество уровней не ограничивается, но при загрузке информации каждая программа может объединять уровни, уменьшая глубину их вложения. При таком объединении названия уровней объединяются, то есть к названию более высокого уровня дописывается справа название входящего в него подуровня. --> <!--    Пример вычисления глубины вложенности: http://bytes.com/topic/net/answers/572365-how-compute-nodes-depth-xslt-->
			<xsl:value-of select="./prop[@name='Position']"/><xsl:text>#</xsl:text><!--2) Номер данного раздела (целое неотрицательное число). На нумерацию разделов не накладывается никаких дополнительных требований, например некоторых номеров может и не быть.-->
			<xsl:value-of select="@Name"/><!--3) Наименование раздела (текст).-->
			<xsl:text>&#13;&#10;</xsl:text>
			
			<xsl:apply-templates select="node">
				<xsl:sort select="current()/prop[@name='Position']" data-type="number" order="ascending"/>
			</xsl:apply-templates>
		</xsl:if>
		<!-- Стиль работы == "Позиция" -->
      	 	<xsl:if test="$job-style=2">
			<xsl:text>20#</xsl:text><!--5.5. Тип 20. Позиция документа-->
			<xsl:value-of select="./prop[@name='Position']"/><xsl:text>#</xsl:text><!-- 1) Номер строки в документе (положительное число). -->
			<xsl:value-of select="./prop[@name='Link']"/><xsl:text>#</xsl:text><!--2) Код позиции (обычно в формате АВС, например Е44-М101) (текст).-->
			<xsl:value-of select="$job-unit"/><xsl:text>#</xsl:text><!--3) Единица измерения (текст).-->
			<xsl:value-of select="@Name"/><xsl:text>#</xsl:text><!--4) Наименование позиции (текст).-->
			<xsl:text>#</xsl:text><!-- 5) Прямые затраты (всего) (число, руб.).  -->
			<xsl:text>#</xsl:text><!-- 6) Основная заработная плата (число, руб.).  -->
			<xsl:text>#</xsl:text><!-- 7) Стоимость эксплуатации машин и механизмов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 8) Заработная плата машинистов (число, руб.) (входит в общую стоимость эксплуатации машин и механизмов).-->
			<xsl:text>#</xsl:text><!-- 9) Стоимость материалов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 10) Возврат материалов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 11) Транспорт материалов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 12) Шефмонтаж (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 13) Трудозатраты основных рабочих (число, чел.-час.).-->
			<xsl:text>#</xsl:text><!-- 14) Трудозатраты машинистов (число, чел.-час.).-->
			<xsl:text>#</xsl:text><!-- 15) Прямые затраты (всего) (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 16) Основная заработная плата (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 17) Стоимость эксплуатации машин и механизмов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 18) Заработная плата машинистов (число, руб.) (входит в общую стоимость эксплуатации машин и механизмов).-->
			<xsl:text>#</xsl:text><!-- 19) Стоимость материалов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 20) Возврат материалов (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 21) Транспорт материалов (число, руб.). -->
			<xsl:text>#</xsl:text><!-- 22) Шефмонтаж (число, руб.).-->
			<xsl:text>#</xsl:text><!-- 23) Трудозатраты основных рабочих (число, чел.-час.).-->
			<xsl:text>#</xsl:text><!-- 24) Трудозатраты машинистов (число, чел.-час.).-->
			<xsl:text>#</xsl:text><!-- 25) Определитель АВС (целое число). Так как определитель 0 используется в АВС, программы, не 
				имеющие возможности правильно выгрузить это поле, должны выводить в него -1, 
				что при загрузке является признаком отсутствия определителя.-->
			<xsl:value-of select="$job-volume"/><xsl:text>#</xsl:text><!-- 26) Объем работ (число).-->
			<xsl:text>#</xsl:text><!-- 27) Признак подчиненности (число). Поле содержит 0 для обычных позиций документа и норму расхода (ненулевую) 
				на единицу объема основной работы для позиций, относящихся к другим позициям. 
				Обычно подчиненными являются материалы (ресурсы), не учтенные в сметной расценке.-->
			<xsl:text>#</xsl:text><!-- 28) Номер позиции по смете (текст). Это поле заполняется только для актов выполненных работ и содержит 
				порядковый номер позиции по смете, к которой относится данная позиция акта.-->
			<xsl:text></xsl:text><!-- 29) Номер сметы (текст). Это поле заполняется только для актов выполненных работ и содержит номер сметы, к 
				которой относится данная позиция акта. Поле может заполняться, если акт относится к нескольким сметам. -->
			<xsl:text>&#13;&#10;</xsl:text>
				
				<!--Ресурсы, назначенные на работу-->
				
					<!--    Находим все узлы (//node) с типом Technics для 
						которых prjRateID==prjActiveRateID(текущей работы)

						Запись означает:
						//node[       - вообще все узлы node в xml
							(./prop[  - у которых есть потомок prop
								(@name='prjRateID') - c атрибутом @name=="prjRateID" 
								and(.=$job-rate-id) - и значением потомка равным $job-rate-id (ID текущей расценки текущей работы)
							])
							and
							(./prop[ - а также есть потомок prop 
								(@name='node-type') - c атрибутом @name=="node-type"
								and(.='Technics')]  - и значением этого потомка =="Technics"
							)
						       ]
					-->

					<xsl:for-each select="//node[(./prop[(@name='prjRateID')and(.=$job-rate-id)])and(./prop[(@name='node-type')and(.='Technics')])]">
						<xsl:text>30#</xsl:text><!--5.7. Тип 30 – Ресурс.	-->
						<xsl:value-of select="prop[@name='Code']"/><xsl:text>#</xsl:text><!--1) Код ресурса (текст). Рекомендуется придерживаться кодов ресурсов АВС или ОКП (для связи с другими программами), однако если выгружающая программа не может предоставить этот код, допускается использование любого кода, уникального для данного ресурса в данном документе. -->
						<xsl:value-of select="prop[@name='Unit']"/><xsl:text>#</xsl:text><!--2) Единица измерения (текст).-->
						<xsl:value-of select="@Name"/><xsl:text>#</xsl:text><!--3) Наименование ресурса (текст).-->
						<xsl:text>1#</xsl:text><!--4) Признак типа ресурса (число): 0 – заработная плата,1 – эксплуатация машин и механизмов,2 – материал. -->
						<xsl:value-of select="prop[@name='Value']"/><xsl:text>#</xsl:text><!--5) Норма расхода ресурса на единицу объема работ (число).-->
						<xsl:text>#</xsl:text><!--6) Цена единицы ресурса нормативная (число, руб.).-->
						<xsl:text>#</xsl:text><!--7) Цена единицы ресурса фактическая (число, руб.).-->
						<xsl:text>&#13;&#10;</xsl:text><!--8) Цена единицы ресурса местная (число, руб.).-->
					</xsl:for-each>

					<!--    Находим все узлы (//node) с типом Personal для 
						которых prjRateID==prjActiveRateID(текущей работы)
					-->

					<xsl:for-each select="//node[(./prop[(@name='prjRateID')and(.=$job-rate-id)])and(./prop[(@name='node-type')and(.='Personal')])]">
						<xsl:text>30#</xsl:text><!--5.7. Тип 30 – Ресурс.	-->
						<xsl:value-of select="prop[@name='Code']"/><xsl:text>#</xsl:text><!--1) Код ресурса (текст). Рекомендуется придерживаться кодов ресурсов АВС или ОКП (для связи с другими программами), однако если выгружающая программа не может предоставить этот код, допускается использование любого кода, уникального для данного ресурса в данном документе. -->
						<xsl:value-of select="prop[@name='Unit']"/><xsl:text>#</xsl:text><!--2) Единица измерения (текст).-->
						<xsl:value-of select="@Name"/><xsl:text>#</xsl:text><!--3) Наименование ресурса (текст).-->
						<xsl:text>0#</xsl:text><!--4) Признак типа ресурса (число): 0 – заработная плата,1 – эксплуатация машин и механизмов,2 – материал. -->
						<xsl:value-of select="prop[@name='Value']"/><xsl:text>#</xsl:text><!--5) Норма расхода ресурса на единицу объема работ (число).-->
						<xsl:text>#</xsl:text><!--6) Цена единицы ресурса нормативная (число, руб.).-->
						<xsl:text>#</xsl:text><!--7) Цена единицы ресурса фактическая (число, руб.).-->
						<xsl:text>&#13;&#10;</xsl:text><!--8) Цена единицы ресурса местная (число, руб.).-->
					</xsl:for-each>


					<!--    Находим все узлы (//node) с типом Material для 
						которых prjRateID==prjActiveRateID(текущей работы)
					-->
					<xsl:for-each select="//node[(./prop[(@name='prjRateID')and(.=$job-rate-id)])and(./prop[(@name='node-type')and(.='Material')])]">
						<xsl:text>30#</xsl:text><!--5.7. Тип 30 – Ресурс.	-->
						<xsl:value-of select="prop[@name='Code']"/><xsl:text>#</xsl:text><!--1) Код ресурса (текст). Рекомендуется придерживаться кодов ресурсов АВС или ОКП (для связи с другими программами), однако если выгружающая программа не может предоставить этот код, допускается использование любого кода, уникального для данного ресурса в данном документе. -->
						<xsl:value-of select="prop[@name='Unit']"/><xsl:text>#</xsl:text><!--2) Единица измерения (текст).-->
						<xsl:value-of select="@Name"/><xsl:text>#</xsl:text><!--3) Наименование ресурса (текст).-->
						<xsl:text>0#</xsl:text><!--4) Признак типа ресурса (число): 0 – заработная плата,1 – эксплуатация машин и механизмов,2 – материал. -->
						<xsl:value-of select="prop[@name='Value']"/><xsl:text>#</xsl:text><!--5) Норма расхода ресурса на единицу объема работ (число).-->
						<xsl:text>#</xsl:text><!--6) Цена единицы ресурса нормативная (число, руб.).-->
						<xsl:text>#</xsl:text><!--7) Цена единицы ресурса фактическая (число, руб.).-->
						<xsl:text>&#13;&#10;</xsl:text><!--8) Цена единицы ресурса местная (число, руб.).-->
					</xsl:for-each>
		</xsl:if>
	</xsl:if>
</xsl:template>
</xsl:stylesheet>

